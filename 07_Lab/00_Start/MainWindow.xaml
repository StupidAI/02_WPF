<Window x:Class="_00_Start.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:_00_Start"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <!--Окно стоит выше всех является предком для всех элементов. Поэтому если ниже по дереву произойдет событие Exit то оно выполнится
    Целью команды является Window -->
    <Window.CommandBindings>
        <!--Выполняется привязка Command="local:MyCommands.Exit" и указыватеся какая команда выполняется Executed="ExitExecuted" -->
        <CommandBinding Command="local:MyCommands.Exit" Executed="ExitExecuted" CanExecute="ExitCanExecute"/>
        <!--что бы добавился код надо нажать на навании команды "OpenExecuted" и нажать F12-->
        <CommandBinding Command="Open" Executed="OpenExecuted"/>
        <CommandBinding Command="Save" Executed="SaveExecuted"/>

    </Window.CommandBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="Файл">
                <!--тут мы только добавляем команды из уже готовой библиотеки (2 спрособа, полный и короткий)
                Но просто написание этих строк ничего не делает. А создается только событие -->
                <MenuItem Header="Открыть" Command="ApplicationCommands.Open"/>
                <MenuItem Header="Сохранить" Command="Save"/>
                <Separator/>
                <!--Источник команды-->
                <!--Реализизация  для RoutedCommand-->
                <!--<MenuItem Header="Выход" Command="local:MyCommands.Exit">-->

                <!--Создается CommandBindings который ищется кодом и потом исполняется при нахождении
                    Но, так как код повторяется дваждый и в меню и в кнопке можно сделать иначе -->
                <!--<MenuItem.CommandBindings>
                        <CommandBinding Command="local:MyCommands.Exit" Executed="ExitExecuted"/>
                    </MenuItem.CommandBindings>-->
                <!--Реализизация  для RoutedUICommand-->
                <MenuItem Command="local:MyCommands.Exit">
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Правка">
                <!--Для данных комманд не надо делать привязку. Все встроено 
                CommandTarget Привязывает команду к определенному элементу-->
                <MenuItem Header="Копировать" Command="Copy" CommandTarget="{Binding ElementName=txtBox}"/>
                <MenuItem Header="Вставить" Command="Paste" CommandTarget="{Binding ElementName=txtBox}"/>
            </MenuItem>
        </Menu>
        <!--Источник команды-->
        <Button Content="Выход" DockPanel.Dock="Bottom" HorizontalAlignment="Right" Width="200" Height="Auto" Command="local:MyCommands.Exit">
            <!--<Button.CommandBindings>
                <CommandBinding Command="local:MyCommands.Exit" Executed="ExitExecuted"/>
            </Button.CommandBindings>-->
        </Button>
        <!--Далее сделано 2 текстбокса что бы показать как работает CommandTarget-->
        <UniformGrid Rows="2">
            <TextBox x:Name="txtBox"/>
            <TextBox x:Name="txtBox1"/>
        </UniformGrid>
    </DockPanel>
</Window>
